name: CI/CD

on:
  push:
    branches: ["main"]
    paths:
      - "app/**"
      - "Dockerfile"
      - "k8s/**"
      - ".github/workflows/ci-cd.yml"
  pull_request:
    branches: ["main"]

env:
  AWS_REGION: eu-west-1                   
  EKS_CLUSTER_NAME: ci-cd-demo-dev        
  ECR_REPOSITORY: ci-cd-demo-dev-app      
  K8S_NAMESPACE: demo
  K8S_DEPLOYMENT: dev-demo-app            

jobs:
  test-build-push-deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write   
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python for tests
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements-dev.txt -r app/requirements.txt

      - name: Run tests
        run: pytest -q

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_GHA_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & Push image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ steps.ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
            ${{ steps.ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Install kubectl
        uses: azure/setup-kubectl@v4

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name "$EKS_CLUSTER_NAME" --region "$AWS_REGION"

      - name: Apply Kubernetes manifests (Kustomize overlay)
        working-directory: k8s/overlays/dev
        run: |
          kubectl apply -k .

      - name: Update Deployment image
        env:
          IMAGE: ${{ steps.ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
        run: |
          kubectl -n "$K8S_NAMESPACE" set image deployment/"$K8S_DEPLOYMENT" app="$IMAGE"

      - name: Wait for rollout
        run: |
          kubectl -n "$K8S_NAMESPACE" rollout status deployment/"$K8S_DEPLOYMENT" --timeout=180s
